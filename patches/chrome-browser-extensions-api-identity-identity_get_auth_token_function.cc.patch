diff --git a/chrome/browser/extensions/api/identity/identity_get_auth_token_function.cc b/chrome/browser/extensions/api/identity/identity_get_auth_token_function.cc
index d13a4e00a372ed776a7c1e422ce5a4901d19eb06..61f48f324832b4084a6c55c69dbfa9e98116cc3b 100644
--- a/chrome/browser/extensions/api/identity/identity_get_auth_token_function.cc
+++ b/chrome/browser/extensions/api/identity/identity_get_auth_token_function.cc
@@ -186,6 +186,7 @@ ExtensionFunction::ResponseAction IdentityGetAuthTokenFunction::Run() {
   // From here on out, results must be returned asynchronously.
   StartAsyncRun();
 
+  BRAVE_RUN
   // TODO(crbug.com/40614113): collapse the asynchronicity
   content::GetUIThreadTaskRunner({})->PostTask(
       FROM_HERE,
@@ -340,12 +341,14 @@ void IdentityGetAuthTokenFunction::StartSigninFlow() {
 void IdentityGetAuthTokenFunction::StartMintTokenFlow(
     IdentityMintRequestQueue::MintType type) {
 #if !BUILDFLAG(IS_CHROMEOS)
+  BRAVE_START_MINT_TOKEN_FLOW_IF
   // ChromeOS in kiosk mode may start the mint token flow without account.
   DCHECK(!token_key_.account_info.IsEmpty())
       << "token_key_.account_info is empty!";
   DCHECK(IdentityManagerFactory::GetForProfile(GetProfile())
              ->HasAccountWithRefreshToken(token_key_.account_info.account_id))
       << "No Refresh token!";
+  BRAVE_START_MINT_TOKEN_FLOW_ELSE
 #endif
   TRACE_EVENT_NESTABLE_ASYNC_BEGIN1("identity", "MintTokenFlow", this, "type",
                                     type);
